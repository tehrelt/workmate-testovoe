// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	models "github.com/tehrelt/workmate-testovoe/internal/models"
)

// TaskProcessor is an autogenerated mock type for the TaskProcessor type
type TaskProcessor struct {
	mock.Mock
}

// Push provides a mock function with given fields: ctx, task
func (_m *TaskProcessor) Push(ctx context.Context, task *models.Task) error {
	ret := _m.Called(ctx, task)

	if len(ret) == 0 {
		panic("no return value specified for Push")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Task) error); ok {
		r0 = rf(ctx, task)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTaskProcessor creates a new instance of TaskProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTaskProcessor(t interface {
	mock.TestingT
	Cleanup(func())
}) *TaskProcessor {
	mock := &TaskProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
